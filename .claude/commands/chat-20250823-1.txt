  🚀 사용 방법:

  1. 파일 생성

  - RecapVoice_EnvTest.nsi 파일 생성
  - 위 코드 복사/붙여넣기

  2. 컴파일

  makensis.exe RecapVoice_EnvTest.nsi

  3. 실행

  RecapVoice_EnvTest.exe

  4. 테스트 과정

  1. 1단계: 현재 환경변수 상태 확인
  2. 2단계: 정리 함수 테스트
  3. 3단계: 설정 함수 테스트
  4. 4단계: 최종 결과 확인

  💡 테스트 특징:

  - ✅ 원본 파일 건드리지 않음
  - ✅ 실제 환경변수 조작으로 정확한 테스트
  - ✅ 단계별 확인 가능
  - ✅ 로그로 상세 내용 확인 가능
  - ✅ 관리자 권한으로 실제 환경과 동일

  이렇게 하면 안전하게 환경변수 함수들을 테스트할 수 있습니다! 🎯


> Invalid command: "step2"
  Error in script ".\RecapVoice_EnvTest.nsi" on line 181 -- aborting creation process\
  오류났어 알려줘 내가 수정할께



● 아! NSIS에서는 라벨(label) 사용 시 콜론(:)이 필요합니다.

  🔧 수정해야 할 부분들:

  라인 181 근처에서 이 부분들을 수정하세요:

  Before (잘못된 코드):

  MessageBox MB_YESNO "1단계: 현재 환경변수 상태를 확인하시겠습니까?" IDYES step1 IDNO
  step2
  step1:
  Call ShowCurrentEnvironmentVariables

  step2:
  MessageBox MB_YESNO "2단계: 환경변수 정리를 테스트하시겠습니까?" IDYES cleanup IDNO
  step3
  cleanup:
  Call CleanupRecapVoiceEnvironment

  step3:
  MessageBox MB_YESNO "3단계: 환경변수 설정을 테스트하시겠습니까?" IDYES setup IDNO step4
  setup:
  Call SetupRecapVoiceEnvironment

  step4:
  MessageBox MB_YESNO "4단계: 최종 상태를 확인하시겠습니까?" IDYES final IDNO done
  final:
  Call ShowCurrentEnvironmentVariables

  done:

  After (수정된 코드):

  MessageBox MB_YESNO "1단계: 현재 환경변수 상태를 확인하시겠습니까?" IDYES step1 IDNO
  step2
  step1:
     Call ShowCurrentEnvironmentVariables

  step2:
     MessageBox MB_YESNO "2단계: 환경변수 정리를 테스트하시겠습니까?" IDYES cleanup IDNO
  step3
  cleanup:
     Call CleanupRecapVoiceEnvironment
     MessageBox MB_OK "환경변수 정리 완료!"

  step3:
     MessageBox MB_YESNO "3단계: 환경변수 설정을 테스트하시겠습니까?" IDYES setup IDNO
  step4
  setup:
     Call SetupRecapVoiceEnvironment
     MessageBox MB_OK "환경변수 설정 완료!"

  step4:
     MessageBox MB_YESNO "4단계: 최종 상태를 확인하시겠습니까?" IDYES final IDNO done
  final:
     Call ShowCurrentEnvironmentVariables

  done:

  📍 핵심 수정사항:

  1. 라벨 뒤에 콜론(:) 추가 없이 그냥 사용
  2. 라벨 다음 줄은 들여쓰기 추가 (가독성)

  이렇게 수정하면 컴파일 오류가 해결될 것입니다! 🎯


> 테스트 한 결과야 path 에 누적되어 등록 돼



● 아! PATH에 누적되는 문제가 있네요. 이는 기존 PATH에서 RecapVoice 관련 항목을 제대로
  제거하지 않고 계속 추가하기 때문입니다.

  🚨 문제 원인:

  현재 테스트 코드의 RemoveRecapVoiceFromPath 함수가 실제로는 PATH에서 제거하지 않고
  로그만 출력하고 있어서 누적됩니다:

  # 현재 테스트 코드 (실제 제거 안함)
  DetailPrint "Would remove: %RECAPVOICE_NGINX%"  # "제거할 예정"이라고만 출력

  🔧 해결 방법:

  테스트 파일의 RemoveRecapVoiceFromPath 함수를 실제로 PATH에서 제거하도록 수정해야
  합니다.

  다음 함수를 추가하세요:

  Function RemoveStringFromPath
     Exch $0  # 제거할 문자열
     Push $1  # 현재 PATH
     Push $2  # 임시 변수
     Push $3  # 길이
     Push $4  # 길이
     Push $5  # 앞부분
     Push $6  # 뒷부분

     ReadRegStr $1 HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"
  "PATH"

     # 세미콜론 추가하여 정확한 매칭
     StrCpy $5 $1 1 -1
     ${If} $5 != ";"
        StrCpy $1 "$1;"
     ${EndIf}

     # 문자열 찾기
     StrStr $2 $1 "$0;"
     StrCmp $2 "" not_found

     # 문자열 제거
     StrLen $3 "$0;"
     StrLen $4 $2
     StrCpy $5 $1 -$4        # 앞부분
     StrCpy $6 $2 "" $3      # 뒷부분
     StrCpy $1 "$5$6"

     # 마지막 세미콜론 제거
     StrCpy $5 $1 1 -1
     ${If} $5 == ";"
        StrCpy $1 $1 -1
     ${EndIf}

     WriteRegExpandStr HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"
   "PATH" $1
     DetailPrint "Removed '$0' from PATH"
     Goto done

     not_found:
     DetailPrint "'$0' not found in PATH"

     done:
     Pop $6
     Pop $5
     Pop $4
     Pop $3
     Pop $2
     Pop $1
     Pop $0
  FunctionEnd

  그리고 RemoveRecapVoiceFromPath 함수를 이렇게 수정하세요:

  Function RemoveRecapVoiceFromPath
     Push $0
     Push $1

     ReadRegStr $1 HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"
  "PATH"
     DetailPrint "Removing RecapVoice paths from PATH..."

     # 실제로 PATH에서 제거
     Push "%RECAPVOICE_NGINX%"
     Call RemoveStringFromPath
     Push "%RECAPVOICE_MONGODB%"
     Call RemoveStringFromPath
     Push "%RECAPVOICE_NODEMODULES%"
     Call RemoveStringFromPath
     Push "%NODEJS_HOME%"
     Call RemoveStringFromPath
     Push "%NPCAP_HOME%"
     Call RemoveStringFromPath
     Push "%WIRESHARK_HOME%"
     Call RemoveStringFromPath
     Push "%FFMPEG_HOME%"
     Call RemoveStringFromPath

     DetailPrint "RecapVoice paths removed from PATH"

     Pop $1
     Pop $0
  FunctionEnd

  이렇게 수정하면 PATH에 누적되지 않고 제대로 제거된 후 추가될 것입니다! 🎯


> 정확한 위치 알려줘



● 네! 정확한 위치를 알려드리겠습니다.

  📍 수정할 정확한 위치:

  1. RemoveStringFromPath 함수 추가

  라인 78번 Function RemoveRecapVoiceFromPath 바로 앞에 이 함수를 추가하세요:

  Function RemoveStringFromPath
     Exch $0  # 제거할 문자열
     Push $1  # 현재 PATH
     Push $2  # 임시 변수
     Push $3  # 길이
     Push $4  # 길이
     Push $5  # 앞부분
     Push $6  # 뒷부분

     ReadRegStr $1 HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"
  "PATH"

     # 세미콜론 추가하여 정확한 매칭
     StrCpy $5 $1 1 -1
     ${If} $5 != ";"
        StrCpy $1 "$1;"
     ${EndIf}

     # 문자열 찾기
     StrStr $2 $1 "$0;"
     StrCmp $2 "" not_found

     # 문자열 제거
     StrLen $3 "$0;"
     StrLen $4 $2
     StrCpy $5 $1 -$4        # 앞부분
     StrCpy $6 $2 "" $3      # 뒷부분
     StrCpy $1 "$5$6"

     # 마지막 세미콜론 제거
     StrCpy $5 $1 1 -1
     ${If} $5 == ";"
        StrCpy $1 $1 -1
     ${EndIf}

     WriteRegExpandStr HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"
   "PATH" $1
     DetailPrint "Removed '$0' from PATH"
     Goto done

     not_found:
     DetailPrint "'$0' not found in PATH"

     done:
     Pop $6
     Pop $5
     Pop $4
     Pop $3
     Pop $2
     Pop $1
     Pop $0
  FunctionEnd

  2. RemoveRecapVoiceFromPath 함수 교체

  라인 78-104번의 기존 RemoveRecapVoiceFromPath 함수를 완전히 삭제하고 다음으로
  교체하세요:

  Function RemoveRecapVoiceFromPath
     Push $0
     Push $1

     ReadRegStr $1 HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"
  "PATH"
     DetailPrint "Removing RecapVoice paths from PATH..."

     # 실제로 PATH에서 제거
     Push "%RECAPVOICE_NGINX%"
     Call RemoveStringFromPath
     Push "%RECAPVOICE_MONGODB%"
     Call RemoveStringFromPath
     Push "%RECAPVOICE_NODEMODULES%"
     Call RemoveStringFromPath
     Push "%NODEJS_HOME%"
     Call RemoveStringFromPath
     Push "%NPCAP_HOME%"
     Call RemoveStringFromPath
     Push "%WIRESHARK_HOME%"
     Call RemoveStringFromPath
     Push "%FFMPEG_HOME%"
     Call RemoveStringFromPath

     DetailPrint "RecapVoice paths removed from PATH"

     Pop $1
     Pop $0
  FunctionEnd

  📋 요약:

  1. 라인 78 앞에 RemoveStringFromPath 함수 추가
  2. 라인 78-104 기존 RemoveRecapVoiceFromPath 함수 교체

  이렇게 수정하면 PATH에 누적되지 않고 제대로 제거 후 추가됩니다! 🎯


> 네가 말하는 라인과 내가 보는 @RecapVoice_EnvTest.nsi 파일의 라인이 틀려 다시 확인해서
  알려줘

  ⎿  Read RecapVoice_EnvTest.nsi (204 lines)



● 네! 파일을 확인해보니 현재 상황이 다르네요.

  📍 현재 파일 상황:

  문제: 라인 45-73의 RemoveRecapVoiceFromPath 함수에서 RemoveStringFromPath 함수를
  호출하고 있는데, 이 함수가 정의되지 않았습니다!

  🔧 정확한 수정 위치:

  라인 44 다음에 추가 (라인 45 Function RemoveRecapVoiceFromPath 바로 앞):

  Function RemoveStringFromPath
     Exch $0  # 제거할 문자열
     Push $1  # 현재 PATH
     Push $2  # 임시 변수
     Push $3  # 길이
     Push $4  # 길이
     Push $5  # 앞부분
     Push $6  # 뒷부분

     ReadRegStr $1 HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"
  "PATH"

     # 세미콜론 추가하여 정확한 매칭
     StrCpy $5 $1 1 -1
     ${If} $5 != ";"
        StrCpy $1 "$1;"
     ${EndIf}

     # 문자열 찾기
     StrStr $2 $1 "$0;"
     StrCmp $2 "" not_found

     # 문자열 제거
     StrLen $3 "$0;"
     StrLen $4 $2
     StrCpy $5 $1 -$4        # 앞부분
     StrCpy $6 $2 "" $3      # 뒷부분
     StrCpy $1 "$5$6"

     # 마지막 세미콜론 제거
     StrCpy $5 $1 1 -1
     ${If} $5 == ";"
        StrCpy $1 $1 -1
     ${EndIf}

     WriteRegExpandStr HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"
   "PATH" $1
     DetailPrint "Removed '$0' from PATH"
     Goto done

     not_found:
     DetailPrint "'$0' not found in PATH"

     done:
     Pop $6
     Pop $5
     Pop $4
     Pop $3
     Pop $2
     Pop $1
     Pop $0
  FunctionEnd


  📝 요약:

  - 라인 44 끝에 커서 두고 엔터 친 후 → 위 RemoveStringFromPath 함수 전체 복사해서
  붙여넣기
  - 그러면 기존 RemoveRecapVoiceFromPath 함수에서 호출하는 RemoveStringFromPath가 정의되어
   오류가 해결됩니다!

  이렇게 하면 PATH 누적 문제가 해결될 것입니다! 🎯


> Invalid command: "StrStr"
  Error in script ".\RecapVoice_EnvTest.nsi" on line 63 -- aborting creation process




● 아! NSIS에서 StrStr 함수를 사용하려면 StrFunc.nsh를 include하고 함수를 초기화해야
  합니다.

  🔧 해결 방법:

  1. 라인 12 다음에 추가 (include 부분):

  !include "StrFunc.nsh"

  2. 라인 21 다음에 추가 (언어 설정 다음):

  ${StrStr}

  📍 정확한 위치:

  현재 라인 9-12:

  !include "MUI2.nsh"
  !include "LogicLib.nsh"
  !include "WinCore.nsh"
  !include "WinMessages.nsh"

  여기에 추가:
  !include "MUI2.nsh"
  !include "LogicLib.nsh"
  !include "WinCore.nsh"
  !include "WinMessages.nsh"
  !include "StrFunc.nsh"

  현재 라인 21:

  !insertmacro MUI_LANGUAGE "Korean"

  다음 줄에 추가:
  !insertmacro MUI_LANGUAGE "Korean"
  ${StrStr}

  이렇게 수정하면 StrStr 함수를 사용할 수 있고 컴파일 오류가 해결됩니다! 🎯


> 계속 같은 오류야 이것 예전에도 이런 적이 있었어


  ⎿  ⧉ Selected 1 lines from RecapVoice_EnvTest.nsi in Cursor


● 아! 맞습니다. NSIS에서 StrStr 함수는 기본 내장 함수가 아니어서 직접 구현해야 합니다.

  🔧 해결 방법:

  1. 라인 22의 ${StrStr} 삭제

  2. RemoveStringFromPath 함수에서 StrStr 대신 다른 방법 사용

  라인 63을 이렇게 수정하세요:

  Before:
  # 문자열 찾기
  StrStr $2 $1 "$0;"
  StrCmp $2 "" not_found

  After:
  # 문자열 찾기 (StrStr 대신 다른 방법 사용)
  Push $1
  Push "$0;"
  Call StrStrReplace
  Pop $2
  StrCmp $2 "" not_found

  3. StrStrReplace 함수 추가

  RemoveStringFromPath 함수 바로 앞(라인 45)에 이 함수를 추가하세요:

  Function StrStrReplace
     Exch $R1 ; needle
     Exch
     Exch $R2 ; haystack
     Push $R3
     Push $R4
     Push $R5
     StrLen $R3 $R1
     StrLen $R4 $R2
     StrCpy $R5 0
     loop:
       StrCpy $R1 $R2 $R3 $R5
       StrCmp $R1 $R4 done
       StrCmp $R1 "" done
       IntOp $R5 $R5 + 1
       Goto loop
     done:
     StrCpy $R1 $R2 "" $R5
     Pop $R5
     Pop $R4
     Pop $R3
     Pop $R2
     Exch $R1
  FunctionEnd

  📝 요약:

  1. 라인 22: ${StrStr} 삭제
  2. 라인 45 앞에: StrStrReplace 함수 추가
  3. 라인 63-64: StrStr 호출을 StrStrReplace 호출로 수정

  이렇게 하면 오류가 해결됩니다! 🎯


> 테스트 해보니 아직 누적이 되는데?




● 아! 문제를 찾았습니다. StrStrReplace 함수가 올바르게 작동하지 않고 있습니다.

  🚨 문제 원인:

  현재 StrStrReplace 함수가 문자열을 찾는 것이 아니라 위치만 반환하고 있어서 실제로
  PATH에서 제거되지 않습니다.

  🔧 해결 방법:

  더 간단한 접근으로 전체 PATH를 다시 구성하는 방식을 사용합시다.

  RemoveStringFromPath 함수를 완전히 교체하세요 (라인 71-120):

  Function RemoveStringFromPath
     Exch $0  # 제거할 문자열
     Push $1  # 현재 PATH
     Push $2  # 새로운 PATH
     Push $3  # 임시 토큰
     Push $4  # 루프 카운터
     Push $5  # 토큰 길이

     ReadRegStr $1 HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"
  "PATH"
     StrCpy $2 ""  # 새로운 PATH 초기화
     StrCpy $4 0   # 카운터 초기화

     # PATH를 세미콜론으로 분리해서 처리
     parse_loop:
        # 다음 세미콜론 위치 찾기
        StrCpy $5 0
        search_semicolon:
           StrCpy $3 $1 1 $5
           StrCmp $3 "" token_end
           StrCmp $3 ";" token_found
           IntOp $5 $5 + 1
           Goto search_semicolon

        token_found:
           StrCpy $3 $1 $5  # 토큰 추출
           IntOp $5 $5 + 1
           StrCpy $1 $1 "" $5  # 나머지 문자열
           Goto check_token

        token_end:
           StrCpy $3 $1  # 마지막 토큰
           StrCpy $1 ""

        check_token:
           # 현재 토큰이 제거할 문자열과 같은지 확인
           StrCmp $3 "$0" skip_token
           StrCmp $3 "" skip_token  # 빈 토큰 건너뛰기

           # 토큰을 새로운 PATH에 추가
           StrCmp $2 "" first_token
           StrCpy $2 "$2;$3"
           Goto continue_loop

           first_token:
           StrCpy $2 "$3"
           Goto continue_loop

        skip_token:
           DetailPrint "Removing token: '$3'"

        continue_loop:
           StrCmp $1 "" done_parsing
           Goto parse_loop

     done_parsing:
        # 새로운 PATH 저장
        WriteRegExpandStr HKLM "SYSTEM\CurrentControlSet\Control\Session
  Manager\Environment" "PATH" $2
        DetailPrint "Updated PATH (removed '$0')"

     Pop $5
     Pop $4
     Pop $3
     Pop $2
     Pop $1
     Pop $0
  FunctionEnd

  이 방식은 PATH를 토큰별로 분리해서 제거할 문자열과 일치하지 않는 것만 다시 조합하므로
  정확하게 제거됩니다.

  이렇게 수정하면 PATH에 누적되지 않고 정확하게 제거될 것입니다! 🎯


> warning 6010: install function "StrStrReplace" not referenced - zeroing code (336-363)
  out


  1 warning:
    6010: install function "StrStrReplace" not referenced - zeroing code (336-363) out\
  이런 메세지가 나온다


  ⎿  ⧉ Selected 1 lines from RecapVoice_EnvTest.nsi in Cursor


● 아! StrStrReplace 함수가 더 이상 사용되지 않아서 경고가 나오네요.

  🔧 해결 방법:

  라인 46-69의 StrStrReplace 함수를 완전히 삭제하세요.

  Function StrStrReplace
     Exch $R1 ; needle
     Exch
     Exch $R2 ; haystack
     Push $R3
     Push $R4
     Push $R5
     StrLen $R3 $R1
     StrLen $R4 $R2
     StrCpy $R5 0
     loop:
       StrCpy $R1 $R2 $R3 $R5
       StrCmp $R1 $R4 done
       StrCmp $R1 "" done
       IntOp $R5 $R5 + 1
       Goto loop
     done:
     StrCpy $R1 $R2 "" $R5
     Pop $R5
     Pop $R4
     Pop $R3
     Pop $R2
     Exch $R1
  FunctionEnd

  이 전체 함수를 삭제하면 경고가 사라집니다.

  현재는 RemoveStringFromPath 함수에서 더 이상 StrStrReplace를 호출하지 않고 자체적으로
  문자열 파싱을 처리하기 때문에 필요없는 함수입니다.

  📝 요약:

  - 라인 46-69: Function StrStrReplace ~ FunctionEnd 전체 삭제
  - 경고 메시지 해결 ✅
  - 코드 정리 완료 🎯


> 성공했어 이제 본 소스 @RecapVoice_Setup.nsi 에 @RecapVoice_EnvTest.nsi 테스트 한 파일
  확인해서 본 소스에 적용 시켜줘 이건 네가 수정해줘 UTF 인코딩이니까 네가 해줘

  ⎿  Read RecapVoice_Setup.nsi (888 lines)

  ⎿  Read RecapVoice_EnvTest.nsi (271 lines)




● 네! 테스트가 성공한 RemoveStringFromPath 함수를 원본 RecapVoice_Setup.nsi 파일에
  적용하겠습니다.

  테스트 파일에서 성공한 핵심 개선사항은 토큰 기반 PATH 파싱으로 정확한 문자열 제거를
  구현한 것입니다.


● Update Todos

  ⎿  ☐ Apply working RemoveStringFromPath function from test file to main setup

============================= Previous Conversation Compacted ============================
● Compact summary (ctrl+r to expand)
  ⎿  Referenced file RecapVoice_Setup.nsi
  ⎿  Read RecapVoice_EnvTest.nsi (271 lines)
  ⎿  Read build.ps1 (134 lines)
  ⎿  Read settings.ini (36 lines)
  ⎿  Todo list read (1 item)

● I'll apply the working RemoveStringFromPath function from the test file to the main
  setup file. Let me first read the main setup file to understand the current structure,
  then replace the problematic PATH removal logic with the proven token-based solution.

● Read(RecapVoice_Setup.nsi)
  ⎿  Read 888 lines (ctrl+r to expand)

● Now I need to compare this with the working test file to identify the differences and
  apply the proven token-based solution to the main file.

● Update(RecapVoice_Setup.nsi)
  ⎿  Updated RecapVoice_Setup.nsi with 112 additions and 69 removals
       482    FunctionEnd
       483
       484    Function RemoveFromPathInstall
       485 -     Exch $0
       486 -     Push $1
       487 -     Push $2
       488 -     Push $3
       489 -     Push $4
       490 -     Push $5
       491 -     Push $6
       485 +     Exch $0  # 제거할 문자열
       486 +     Push $1  # 현재 PATH
       487 +     Push $2  # 새로운 PATH
       488 +     Push $3  # 임시 토큰
       489 +     Push $4  # 현재 카운터
       490 +     Push $5  # 토큰 길이
       491
       492       ReadRegStr $1 HKLM "SYSTEM\CurrentControlSet\Control\Session
             Manager\Environment" "PATH"
       493 -     StrCpy $5 $1 1 -1 # 마지막 문자 가져오기
       493 +     StrCpy $2 ""  # 새로운 PATH 초기화
       494 +     StrCpy $4 0   # 카운터 초기화
       495
       496 -     ${If} $5 != ";"
       497 -        StrCpy $1 "$1;" # 마지막에 세미콜론 추가
       498 -     ${EndIf}
       496 +     # PATH를 세미콜론으로 분리해서 처리
       497 +     parse_loop:
       498 +        # 다음 세미콜론 위치 찾기
       499 +        StrCpy $5 0
       500 +        search_semicolon:
       501 +           StrCpy $3 $1 1 $5
       502 +           StrCmp $3 "" token_end
       503 +           StrCmp $3 ";" token_found
       504 +           IntOp $5 $5 + 1
       505 +           Goto search_semicolon
       506
       507 -     Push $1
       508 -     Push "$0;"
       509 -     Call StrStr
       510 -     Pop $2
       511 -     StrCmp $2 "" done
       507 +        token_found:
       508 +           StrCpy $3 $1 $5  # 토큰 추출
       509 +           IntOp $5 $5 + 1
       510 +           StrCpy $1 $1 "" $5  # 나머지 문자열
       511 +           Goto check_token
       512
       513 -     StrLen $3 "$0;"
       514 -     StrLen $4 $2
       515 -     StrCpy $5 $1 -$4 # 제거할 부분 이전까지
       516 -     StrCpy $6 $2 "" $3 # 제거할 부분 이후부터
       517 -     StrCpy $3 "$5$6"
       513 +        token_end:
       514 +           StrCpy $3 $1  # 마지막 토큰
       515 +           StrCpy $1 ""
       516
       517 -     StrCpy $5 $3 1 -1 # 마지막 문자 확인
       518 -     ${If} $5 == ";"
       519 -        StrCpy $3 $3 -1 # 마지막 세미콜론 제거
       520 -     ${EndIf}
       517 +        check_token:
       518 +           # 현재 토큰이 제거할 문자열과 같은지 확인
       519 +           StrCmp $3 "$0" skip_token
       520 +           StrCmp $3 "" skip_token  # 빈 토큰 건너뛰기
       521
       522 -     WriteRegExpandStr HKLM "SYSTEM\CurrentControlSet\Control\Session
     Manager\Environment" "PATH" $3
           - Manager\Environment" "PATH" $3
       523 -     DetailPrint "Removed '$0' from PATH"
       522 +           # 토큰을 새로운 PATH에 추가
       523 +           StrCmp $2 "" first_token
       524 +           StrCpy $2 "$2;$3"
       525 +           Goto continue_loop
       526
       527 -     done:
       528 -        Pop $6
       529 -        Pop $5
       530 -        Pop $4
       531 -        Pop $3
       532 -        Pop $2
       533 -        Pop $1
       534 -        Pop $0
       527 +           first_token:
       528 +           StrCpy $2 "$3"
       529 +           Goto continue_loop
       530 +
       531 +        skip_token:
       532 +           DetailPrint "Removing token: '$3'"
       533 +
       534 +        continue_loop:
       535 +           StrCmp $1 "" done_parsing
       536 +           Goto parse_loop
       537 +
       538 +     done_parsing:
       539 +        # 새로운 PATH 설정
       540 +        WriteRegExpandStr HKLM "SYSTEM\CurrentControlSet\Control\Session
           + Manager\Environment" "PATH" $2
       541 +        DetailPrint "Updated PATH (removed '$0')"
       542 +
       543 +     Pop $5
       544 +     Pop $4
       545 +     Pop $3
       546 +     Pop $2
       547 +     Pop $1
       548 +     Pop $0
       549    FunctionEnd
       550
       551    Section "Uninstall"
     ...
       567    SectionEnd
       568
       569    Function un.RemoveFromPath
       570 -     Exch $0
       571 -     Push $1
       572 -     Push $2
       573 -     Push $3
       574 -     Push $4
       575 -     Push $5
       576 -     Push $6
       570 +     Exch $0  # 제거할 문자열
       571 +     Push $1  # 현재 PATH
       572 +     Push $2  # 새로운 PATH
       573 +     Push $3  # 임시 토큰
       574 +     Push $4  # 현재 카운터
       575 +     Push $5  # 토큰 길이
       576
       577       ReadRegStr $1 HKLM "SYSTEM\CurrentControlSet\Control\Session
             Manager\Environment" "PATH"
       578 -     StrCpy $5 $1 1 -1 # 마지막 문자 가져오기
       578 +     StrCpy $2 ""  # 새로운 PATH 초기화
       579 +     StrCpy $4 0   # 카운터 초기화
       580
       581 -     ${If} $5 != ";"
       582 -        StrCpy $1 "$1;" # 마지막에 세미콜론 추가
       583 -     ${EndIf}
       581 +     # PATH를 세미콜론으로 분리해서 처리
       582 +     parse_loop:
       583 +        # 다음 세미콜론 위치 찾기
       584 +        StrCpy $5 0
       585 +        search_semicolon:
       586 +           StrCpy $3 $1 1 $5
       587 +           StrCmp $3 "" token_end
       588 +           StrCmp $3 ";" token_found
       589 +           IntOp $5 $5 + 1
       590 +           Goto search_semicolon
       591
       592 -     Push $1
       593 -     Push "$0;"
       594 -     Call un.StrStr
       595 -     Pop $2
       596 -     StrCmp $2 "" done
       592 +        token_found:
       593 +           StrCpy $3 $1 $5  # 토큰 추출
       594 +           IntOp $5 $5 + 1
       595 +           StrCpy $1 $1 "" $5  # 나머지 문자열
       596 +           Goto check_token
       597
       598 -     StrLen $3 "$0;"
       599 -     StrLen $4 $2
       600 -     StrCpy $5 $1 -$4 # 제거할 부분 이전까지
       601 -     StrCpy $6 $2 "" $3 # 제거할 부분 이후부터
       602 -     StrCpy $3 "$5$6"
       598 +        token_end:
       599 +           StrCpy $3 $1  # 마지막 토큰
       600 +           StrCpy $1 ""
       601
       602 -     StrCpy $5 $3 1 -1 # 마지막 문자 확인
       603 -     ${If} $5 == ";"
       604 -        StrCpy $3 $3 -1 # 마지막 세미콜론 제거
       605 -     ${EndIf}
       602 +        check_token:
       603 +           # 현재 토큰이 제거할 문자열과 같은지 확인
       604 +           StrCmp $3 "$0" skip_token
       605 +           StrCmp $3 "" skip_token  # 빈 토큰 건너뛰기
       606
       607 -     WriteRegExpandStr HKLM "SYSTEM\CurrentControlSet\Control\Session
     Manager\Environment" "PATH" $3
           - Manager\Environment" "PATH" $3
       607 +           # 토큰을 새로운 PATH에 추가
       608 +           StrCmp $2 "" first_token
       609 +           StrCpy $2 "$2;$3"
       610 +           Goto continue_loop
       611
       612 -     done:
       613 -        Pop $6
       614 -        Pop $5
       615 -        Pop $4
       616 -        Pop $3
       617 -        Pop $2
       618 -        Pop $1
       619 -        Pop $0
       612 +           first_token:
       613 +           StrCpy $2 "$3"
       614 +           Goto continue_loop
       615 +
       616 +        skip_token:
       617 +           DetailPrint "Removing token: '$3'"
       618 +
       619 +        continue_loop:
       620 +           StrCmp $1 "" done_parsing
       621 +           Goto parse_loop
       622 +
       623 +     done_parsing:
       624 +        # 새로운 PATH 설정
       625 +        WriteRegExpandStr HKLM "SYSTEM\CurrentControlSet\Control\Session
           + Manager\Environment" "PATH" $2
       626 +        DetailPrint "Updated PATH (removed '$0')"
       627 +
       628 +     Pop $5
       629 +     Pop $4
       630 +     Pop $3
       631 +     Pop $2
       632 +     Pop $1
       633 +     Pop $0
       634    FunctionEnd
       635
       636    Function un.ReadSettingsValue

● Update Todos
  ⎿  ☒ Apply working RemoveStringFromPath function from test file to main setup

● 성공적으로 테스트 파일에서 검증된 token-based PATH parsing 알고리즘을 메인
  RecapVoice_Setup.nsi 파일에 적용했습니다.

  주요 변경 사항:

  1. RemoveFromPathInstall 함수 - 설치용 PATH 제거 함수
    - 기존의 단순 문자열 교체 방식을 token-based parsing으로 변경
    - PATH를 세미콜론(;)으로 분리하여 각 토큰을 개별적으로 처리
    - 정확한 매칭을 통해 PATH 누적 문제 해결
  2. un.RemoveFromPath 함수 - 언인스톨용 PATH 제거 함수
    - 동일한 token-based parsing 알고리즘 적용
    - 언인스톨 시에도 정확한 PATH 정리 보장

  알고리즘의 핵심 개선점:

  - 토큰 단위 처리: PATH를 세미콜론으로 분리하여 각 경로를 개별 처리
  - 정확한 매칭: 부분 매칭이 아닌 완전 매칭으로 오류 방지
  - 깔끔한 재구성: 매칭되지 않는 토큰만으로 새로운 PATH 구성
  - 디버깅 지원: 제거되는 토큰을 DetailPrint로 출력

  이제 메인 설치 파일에서도 테스트에서 검증된 대로 PATH 누적 문제 없이 환경변수가 정확히
  관리될 것입니다.